// :root는 최상위 요소에 변수를 선언하면 모든 요소에서 이 변수를 사용할 수 있다.
// --(하이픈 2개) 다음 속성 이름을 정해주고 :(콜론)뒤에 속성 값을 적어준다.
// 사용할때는 var로 변수를 선언하고, 소괄호 안에 속성 값을 입력

:root {
	--background-color: #fff;
	--background-light: #fff;
	--shadow-color: rgba(0,0,0,0.2);
	--primary-color: rgb(255, 0, 86);
	--text-color: #0A0A0A;
	--text-light: #575757;
	--font-size: 16px;
	--animation-speed: 1;
}

@function getAnimationDuration($duration: number) {
	@return calc($duration * var(--animation-speed));
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	font-size: var(--font-size); // :root에 설정한 16px
	// 추가한 rotobo 폰트 지정
	font-family: 'Roboto', sans-serif;
}

a {
	text-decoration: none;
}

// img {
// 	object-fit: cover; // 이미지의 가로세로비가 일치하지 않을때, 이미지 일부를 자르고 확대시킴.
// }

.btn {
	border: none;
	outline: none;
	background-color: var(--primary-color);
	color: #fff;
	padding: .75em 1em;
	text-transform: uppercase;
	// 위에 :root에 지정한 font-size를 기준으로 em을 지정하면 font-size크기에 * em 값이 표시된다.
	font-size: 1em;
	font-weight: bold;
	letter-spacing: 1px;
	border-radius: 3px;
	box-shadow: 0 2px 6px var(--shadow-color);
	&:hover {
		box-shadow: 0 1px 3px var(--shadow-color);
	}
}

.custom-image {
	// background-color: aquamarine;
	height: 0;
	width: 100%;
	position: relative;
	img {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
	// props로 받아오기
	// padding-top: 80%;
}

@import "partials/navbar.scss";

.section {
	display: flex;
	align-items: center;
	.title {
		color: var(--text-color);
		font-size: 2.5em;
		margin-bottom: .25em; 
	}
	.info {
		color: var(--text-light);
		font-size: 1em;
		letter-spacing: 1px;
		line-height: 1.3;
		margin-bottom: 1.25em;
	}
	.col {
		width: 50%;
	}	
}

.section.hero {
	.typography {
		padding-right: 1em;
	}
	.gallery {
		display: grid;
		// repeat(반복횟수, 반복값)
		grid-template-columns: repeat(3, 1fr);
		gap: 1.75vw;
		.custom-image {
			// forwards 재생된 animation의 마지막 keyframes에 의해 설정된 값이 적용됌
			border-radius: 3px;
			overflow:  hidden;
			transform: scale(0);
			opacity: 0;
			animation: getAnimationDuration(.5s) popOut forwards;
			&:nth-child(2) {
				animation-delay: .1s;
			}
			&:nth-child(3) {
				animation-delay: .2s;
			}
			&:nth-child(6) {
				animation-delay: .3s;
			}
			&:nth-child(9) {
				animation-delay: .4s;
			}
			&:nth-child(8) {
				animation-delay: .5s;
			}
			&:nth-child(7) {
				animation-delay: .6s;
			}
			&:nth-child(4) {
				animation-delay: .7s;
			}
			&:nth-child(5) {
				animation-delay: .8s;
			}

		}
	}
}


.main {
	padding-block: 3vw;
}

.container {
	padding-inline: 15vw;
}
@import "partials/animations.scss";
@media screen and (max-width: 768px) {
	.navbar {
		.nav-links {
			display: none;
		}
		.sidebar-btn {
			display: block;
		}
	}
}

